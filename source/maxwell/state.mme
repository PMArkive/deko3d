
# Binds color blend enable state
# Arguments:
# - 0: DkColorState::blendEnableMask
BindColorBlendEnableState::
	ColorLogicOpEnable'0 to addr'mem
	ColorBlendEnable'1 to addr
	bit r1 0 to mem
	bit r1 1 to mem
	bit r1 2 to mem
	bit r1 3 to mem
	bit r1 4 to mem
	bit r1 5 to mem
	*bit r1 6 to mem
	bit r1 7 to mem

# Binds color write mask state
# Arguments:
# - 0: DkColorWriteState::masks
BindColorWriteMasks::
	ColorWriteMask'1 to addr
	8 to r2
.loop
	ei ColorWriteMaskRed_Shift:rz   0:r1 1 to r3
	ei ColorWriteMaskGreen_Shift:r3 1:r1 1 to r3
	ei ColorWriteMaskBlue_Shift:r3  2:r1 1 to r3
	ei ColorWriteMaskAlpha_Shift:r3 3:r1 1 to r3
	dec r2 to r2
	r3 to mem
	*bnz r2 .loop
	lsr r1 4 to r1

# Binds depth/stencil state
# Arguments:
# - 0: First word of DkDepthStencilState
# - 1: Second word of DkDepthStencilState
BindDepthStencilState::
	DepthTestEnable'0 to addr; fetch r2
	bit r1 0 to r7 mem
	bz r7 .checkStencil
	DepthWriteEnable'0 to addr
	bit r1 1 to mem
	DepthTestFunc'0 to addr
	bfl 4:r1 4 to mem

.checkStencil
	StencilEnable'0 to addr
	bit r1 2 to r7 mem
	*bnz r7 .cancelExit
	StencilFrontOpFail'1 to addr
.cancelExit
	bfl 0:r2 4 to mem   # StencilFrontOpFail
	bfl 8:r2 4 to mem   # StencilFrontOpZFail
	bfl 4:r2 4 to mem   # StencilFrontOpZPass
	bfl 12:r2 4 to mem  # StencilFrontFunc
	StencilBackOpFail'1 to addr
	bfl 16:r2 4 to mem  # StencilBackOpFail
	bfl 24:r2 4 to mem  # StencilBackOpZFail
	*bfl 20:r2 4 to mem # StencilBackOpZPass
	bfl 28:r2 4 to mem  # StencilBackFunc

# Updates the current zcull stencil criteria, skipping the update if it's unchanged
# Arguments:
# - 0: Word to write to ZcullStencilCriteria
SetStencilCullCriteria::
	ldi MmeStencilCullCriteria to r2
	sub r1 r2 to r7
	*bnz r7 .cancelExit
	ZcullStencilCriteria'0 to addr
.cancelExit
	r1 to mem
	*MmeStencilCullCriteria'0 to addr
	r1 to mem
